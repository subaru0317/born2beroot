[aptitudeとaptの違い]
aptitude --- 高レベルのパッケージマネージャ
apt		 --- 低レベルのパッケージマネージャ


[SELinuxとAppArmorの違い]

[CentOSとDebianの違い]

[VMはどのようにして動作しているか]

[sudoの価値とその操作]

セキュリティ上の理由から、sudoが使用できるパスを制限する
・ /bin				: 基本コマンドが置かれているディレクトリ。bootするときに必要なシステムの基本コマンドを置く。
・ /usr/bin			: 基本コマンドが置かれているディレクトリ。一般ユーザ向けの基本コマンドを置く。
					　ディストリビューションが管理するディレクトリであるため、自分が別途インストールするコマンドは/usr/local/binに置く。
・ /usr/local/bin	: 基本コマンドが置かれているディレクトリ。自分でパッケージシステム外でインストールする基本コマンドを置く。
・ /sbin			: 管理者用コマンドが置かれているディレクトリ。boot時に必要な管理者コマンドを置く。
・ /usr/sbin		: 管理者用コマンドが置かれているディレクトリ。平常時用のシステム管理コマンドやサーバプログラムを置く。
・ /usr/local/sbin	: 管理者用コマンドが置かれているディレクトリ。自分でパッケージシステム外でインストールする管理者用コマンドを置く。
・ /snap/bin		: 

[パーティションとは？]
Linuxでディスク容量が不足すると、全体的なシステムに不具合が生じる。
	-> 解決策１：容量が足りなくなる前にディスク容量を追加する
	-> 解決策２：ディレクトリごとに別々のパーティションを割り当てる
解決策２について解説する。
パーティション(ディスク内の区画)を割り当てることによって、Aが容量不足になっても、Bは容量不足にならないのだ。
したがって、容量が肥大化しやすい箇所と稼働に関する重要なファイルを別のパーティションに分けたりする。

/boot	:	システム起動に関連するファイルを格納。システム起動時に最初に読み込むパーティション。
			ブートローダとカーネルイメージが保存されている。
			暗号化してはならない。暗号化されていると、利用できなくなり、システムが起動できなくなる。
			システム起動時にしか利用しない。運用時に利用するファイルとは別のパーティションを割り当てることが推奨される。
/home	:	ユーザの作業用ディレクトリ(ホームディレクトリ)
			複数のユーザが使用する可能性あり。使用量が大きくなる可能性が高いため、別のパーティションを割り当てることが推奨される。
/var	:	常に内容が書き換わるファイルを格納する。
			ログ、データの一時保存、Webサーバのコンテンツなどhomeディレクトリより肥大化しやすい。
			普通、別のパーティションを割り当てるべきである。
[SWAP]	:	メモリ不足になった際にメモリの空き容量を作るためのデータ退避エリア。
/tmp	:	長期保存の必要のないデータを保存するために使用される。

/dev/sda:	基本的にインストールしているストレージに割り当てられるデバイスファイル名。

[LVMの機能および概要]
パーティションで分割できることはわかった。しかし、容量不足に陥ったディレクトリはどうすれば良いのか。。。
LVMがなかったら、容量がより大きいパーティションを別途用意して全て移す。元のパーティションは削除する。という作業が必要になる。
LVM(Logical Volume Manager)という仕組みを使おう。ストレージを柔軟に管理することができる！
	->構築後に自由にサイズ変更できる点がGood！
LVMとは、複数のハードディスクやパーティションにまたがった記憶容量をまとめて、単一の論理ボリューム(LV)として扱えるディスク管理機能のこと。
1. HDDなどのストレージ内を物理的な区画(物理ボリューム)に分ける
2. 物理ボリュームをいくつか束ねて論理的なストレージとなる「ボリュームグループ」を作成する
3. ボリュームグループから必要な容量だけを「論理ボリューム」に割り当てる(この論理ボリュームはパーティションと同様に扱える)
ボリュームグループや論理ボリュームの容量の増減は簡単。
1. 容量を増やしたい
	ボリュームグループに物理ボリュームを追加する。
	増えたボリュームグループから必要な容量だけを論理ボリュームに割り当てる。
2. 容量を減らしたい
	論理ボリュームからボリュームグループに容量を戻す。

フィジカルエクステント	 : PE
	LVMが扱う最小単位。デフォルトで4MB。PEの最大数は65536個。
物理ボリューム			: PV
ボリュームグループ	 	 : VG
論理ボリューム			 : LV

$ sudo pvdisplay : PVを確認できる
$ sudo vgdisplay : VGを確認できる
$ sudo lvdisplay : LVを確認できる

加えて、「スナップショット」という便利機能が存在する。
「論理ボリューム」を瞬時にバックアップできる機能。

[UFWの機能および概要]
uncomplicated FireWall.
訳は、単純なファイアウォール。
LinuxのNetfilterによるファイアウォールを管理して操作するための"iptablesをラッパーした機能"のことを指す。
Linuxにはパケットフィルタリング(ファイアウォール)やNATを実現するためのNetfilterという機能を標準で備えている。
これを、操作・管理するためのツールとして、iptablesが存在する。
しかし、iptablesは設定が難しい。これを簡略化し、最低限のセキュリティ対策を行えるようにするのがUFW。
iptables
	Linuxに実装されているパケットフィルタリング型(入ってきたパケットのアクセス制御を行う)のfirewallの機能

$ ufw enable			# ファイアウォールの有効化
$ ufw unable			# ファイアウォールの無効化
$ ufw status numbered	# 状況確認(numberedは番号が割り振られるようになるオプション)
$ ufw allow xxx			# xxxサービスのアクセスを許可
$ ufw allow [num]		# TCP/UDP Port numでのアクセスを許可
$ ufw delete [num]		# num番目のルールを削除
その他、man ufwで確認可能


[SSHの機能および概要]



[chageとは？]
有効期限の制御を行う。
chage -l [ユーザ名]
-l: 一覧表示するためのオプション

Last password change	: 最後にパスワードを変更した日付
Password expires		: パスワードの有効期限
Password inactive		: パスワードの有効期限が過ぎてからアカウントがロックされる期間(放置期間)
Account expires			: アカウントの有効期限
Minimum ~				: パスワードを変更する間隔の最小日数(この日数が経過しないと新しいパスワードの設定ができない)
Maximum ~				: パスワードを変更しなければならない間隔の最大日数(この日数でPassword expiresが決定する)
Number ~				: パスワードが期限切れになるまでの警告日数

$ sudo nano /etc/login.defs
でこれらの項目を設定することができる。



[apt, user, hostname, lvm, sudo, ufw, ssh, wall, cron, tty ]